{"version":3,"sources":["WeatherDataComponent.js","App.js","index.js"],"names":["WeatherDataComponent","nextProps","nextState","temp","this","props","city","console","log","feelsLike","src","icon","alt","humidity","pressure","maxTemp","minTemp","Component","App","state","cityName","weatherData","getUserCity","e","setState","target","value","formSubmission","preventDefault","trim","fetchWeatherData","fetch","process","then","response","json","data","catch","err","className","onSubmit","type","placeholder","onChange","main","maxTemp_max","temp_min","feels_like","weather","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEqBA,E,2KACjB,SAAsBC,EAAUC,GAC5B,OAAGD,EAAUE,OAAOC,KAAKC,MAAMC,MAAQL,EAAUK,OAAOF,KAAKC,MAAMC,O,oBAMvE,WAEI,OADAC,QAAQC,IAAI,iCAER,gCACI,4CAAeJ,KAAKC,MAAMI,aAC1B,wCAAWL,KAAKC,MAAMC,QACtB,qBAAKI,IAAG,2CAAuCN,KAAKC,MAAMM,KAAlD,WAAiEC,IAAI,KAC7E,8BACI,8CAAiBR,KAAKC,MAAMF,KAA5B,eAEJ,4BAAIC,KAAKC,MAAMQ,WACf,4BAAIT,KAAKC,MAAMS,WACf,4BAAIV,KAAKC,MAAMU,UACf,4BAAIX,KAAKC,MAAMW,iB,GArBmBC,aCE7BC,E,4MACnBC,MAAM,CACJC,SAAS,GACTC,YAAY,M,EAEdC,YAAY,SAACC,GACX,EAAKC,SAAS,CACbJ,SAAUG,EAAEE,OAAOC,S,EAKtBC,eAAe,SAACJ,GAEdA,EAAEK,iBACFrB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,EAAKW,MAAMC,UACU,KAA9B,EAAKD,MAAMC,SAASS,QACrB,EAAKC,iBAAiB,EAAKX,MAAMC,W,EAKrCU,iBAAiB,SAACxB,GAChByB,MAAM,qDAAD,OAAsDzB,EAAtD,kBAAoE0B,mCAApE,kBAAkHC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAE,EAAKZ,SAAS,CAACH,YAAYe,OAAQC,OAAM,SAAAC,GAAG,OAAE/B,QAAQC,IAAI8B,O,uDAE9N,WAEElC,KAAK0B,iBAAiB,e,oBAIxB,WAGD,IAAIM,EAAKhC,KAAKe,MAAME,YAEjB,OADJd,QAAQC,IAAIJ,KAAKe,MAAME,aAEjB,sBAAKkB,UAAU,OAAf,UACE,qDACF,6CACA,uBAAMC,SAAUpC,KAAKuB,eAArB,UACE,uBAAOc,KAAK,OAAOC,YAAY,uBAAuBC,SAAUvC,KAAKkB,cACrE,yDAEDc,GACD,cAAC,EAAD,CACA9B,KAAMF,KAAKe,MAAMC,SAChBjB,KAAMiC,EAAKQ,KAAKzC,KAChBY,QAASqB,EAAKQ,KAAKC,YACnB7B,QAASoB,EAAKQ,KAAKE,SACnBjC,SAAUuB,EAAKQ,KAAK/B,SACpBJ,UAAW2B,EAAKQ,KAAKG,WACrBpC,KAAMyB,EAAKY,QAAQ,GAAGrC,c,GArDIM,aCEjCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.624cf0e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class WeatherDataComponent extends Component {\n    shouldComponentUpdate(nextProps,nextState){\n        if(nextProps.temp===this.props.city && nextProps.city===this.props.city){\n            return false\n        }\n        return true\n\n    }\n    render() {\n        console.log(\"render from weather component\");\n        return (\n            <div>\n                <p>Feels like {this.props.feelsLike}</p>\n                <p>City : {this.props.city}</p>\n                <img src={ `http://openweathermap.org/img/wn/${this.props.icon}@4x.png`} alt=\"\"/>\n                <div>\n                    <h1>Temperture: {this.props.temp} â„ƒ</h1>\n                </div>\n                <p>{this.props.humidity}</p>\n                <p>{this.props.pressure}</p>\n                <p>{this.props.maxTemp}</p>\n                <p>{this.props.minTemp}</p>\n                \n            </div>\n        )\n    }\n}\n\n","import React,{Component} from 'react'\nimport WeatherDataComponent from './WeatherDataComponent'\n\n\nexport default class App extends Component {\n  state={\n    cityName:\"\",\n    weatherData:null\n  }\n  getUserCity=(e)=>{\n    this.setState({\n     cityName: e.target.value\n    })\n    \n  }\n\n  formSubmission=(e)=>{\n    // it prevent that the form is not refreshes\n    e.preventDefault()\n    console.log(\"form submitted\");\n    console.log(this.state.cityName);\n    if(this.state.cityName.trim()!== \"\"){\n      this.fetchWeatherData(this.state.cityName)\n    }\n\n\n  }\n  fetchWeatherData=(city)=>{\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`).then(response=>response.json()).then(data=>this.setState({weatherData:data})).catch(err=>console.log(err))\n  }\n  componentDidMount(){\n    // onload\n    this.fetchWeatherData(\"Frankfurt\")\n  \n    \n  }\n  render(){\n    // API HIDEN\n    // console.log(process.env.REACT_APP_API_KEY);\n let data=this.state.weatherData\nconsole.log(this.state.weatherData);\n    return(\n      <div className=\"card\">\n        <h1>Cimilada kala soco </h1>\n      <h1>Weather App</h1>\n      <form onSubmit={this.formSubmission}>\n        <input type=\"text\" placeholder=\"Enter Your City Name\" onChange={this.getUserCity}/>\n        <button>Get Weather Data</button>\n      </form>\n      {data && \n      <WeatherDataComponent \n      city={this.state.cityName}\n       temp={data.main.temp}\n       maxTemp={data.main.maxTemp_max}\n       minTemp={data.main.temp_min}\n       humidity={data.main.humidity}\n       feelsLike={data.main.feels_like}\n       icon={data.weather[0].icon}\n      />}\n    </div>\n    );\n   \n  }}\n  \n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}